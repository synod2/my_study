  start 문제 풀이

  elf 파일 내 여러 헤더들을 다 날려놓은 상태.
  info files로 OEP 확인하고 그곳으로 이동. 
  _start 로 이동해서 프로그램 내 어셈코드 확인함.

   0x08048060 <+0>:     push   esp
   0x08048061 <+1>:     push   0x804809d
   0x08048066 <+6>:     xor    eax,eax
   0x08048068 <+8>:     xor    ebx,ebx
   0x0804806a <+10>:    xor    ecx,ecx
   0x0804806c <+12>:    xor    edx,edx
   0x0804806e <+14>:    push   0x3a465443
   0x08048073 <+19>:    push   0x20656874
   0x08048078 <+24>:    push   0x20747261
   0x0804807d <+29>:    push   0x74732073
   0x08048082 <+34>:    push   0x2774654c
   -> 총 20바이트 문자열 스택에 출력. 
   0x08048087 <+39>:    mov    ecx,esp
   0x08048089 <+41>:    mov    dl,0x14
   0x0804808b <+43>:    mov    bl,0x1
   0x0804808d <+45>:    mov    al,0x4
   0x0804808f <+47>:    int    0x80
   ->syscall 1번 write 함수 실행. 
   0x08048091 <+49>:    xor    ebx,ebx
   0x08048093 <+51>:    mov    dl,0x3c
   0x08048095 <+53>:    mov    al,0x3
   0x08048097 <+55>:    int    0x80
   ->syscall3번 read 함수 실행. 인자값은 아까 스택에
   푸시했던 내용 그대로이기 떄문에 쓰여지는 위치는
   ebp-20부터. 24바이트 입력시 bof 발생함. 
   3c -> 최대 60바이트만큼 입력받을 수 있음. 
   0x08048099 <+57>:    add    esp,0x14
   0x0804809c <+60>:    ret 
   
   스택에 실행권한이 있어 쉘코드를 실행 가능.
   스택의 주소를 leak 해야 계속 진행이 가능.
   